{"name": "test_security", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".HJOYVi11\"}\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00FA5FD3+2187219]\n\tOrdinal0 [0x00F3E6D1+1763025]\n\tOrdinal0 [0x00E53E78+802424]\n\tOrdinal0 [0x00E81C10+990224]\n\tOrdinal0 [0x00E81EAB+990891]\n\tOrdinal0 [0x00EAEC92+1174674]\n\tOrdinal0 [0x00E9CBD4+1100756]\n\tOrdinal0 [0x00EACFC2+1167298]\n\tOrdinal0 [0x00E9C9A6+1100198]\n\tOrdinal0 [0x00E76F80+946048]\n\tOrdinal0 [0x00E77E76+949878]\n\tGetHandleVerifier [0x012490C2+2721218]\n\tGetHandleVerifier [0x0123AAF0+2662384]\n\tGetHandleVerifier [0x0103137A+526458]\n\tGetHandleVerifier [0x01030416+522518]\n\tOrdinal0 [0x00F44EAB+1789611]\n\tOrdinal0 [0x00F497A8+1808296]\n\tOrdinal0 [0x00F49895+1808533]\n\tOrdinal0 [0x00F526C1+1844929]\n\tBaseThreadInitThunk [0x7753FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77687A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77687A6E+238]", "trace": "self = <login_test.TestSecurity object at 0x0000017A33E4B8E0>\n\n    def test_security(self):\n>       SecurityPage(Session.get_driver()).work()\n\ntests\\login_test.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SecurityPage.py:34: in work\n    self.find_element(*self.locator_dictionary['tabSecurityPage']).click()\npages\\SecurityPage.py:21: in find_element\n    return self.browser.find_element(*loc)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:857: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017A33E71490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77687A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77687A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".HJOYVi11\"}\nE         (Session info: chrome=103.0.5060.134)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00FA5FD3+2187219]\nE       \tOrdinal0 [0x00F3E6D1+1763025]\nE       \tOrdinal0 [0x00E53E78+802424]\nE       \tOrdinal0 [0x00E81C10+990224]\nE       \tOrdinal0 [0x00E81EAB+990891]\nE       \tOrdinal0 [0x00EAEC92+1174674]\nE       \tOrdinal0 [0x00E9CBD4+1100756]\nE       \tOrdinal0 [0x00EACFC2+1167298]\nE       \tOrdinal0 [0x00E9C9A6+1100198]\nE       \tOrdinal0 [0x00E76F80+946048]\nE       \tOrdinal0 [0x00E77E76+949878]\nE       \tGetHandleVerifier [0x012490C2+2721218]\nE       \tGetHandleVerifier [0x0123AAF0+2662384]\nE       \tGetHandleVerifier [0x0103137A+526458]\nE       \tGetHandleVerifier [0x01030416+522518]\nE       \tOrdinal0 [0x00F44EAB+1789611]\nE       \tOrdinal0 [0x00F497A8+1808296]\nE       \tOrdinal0 [0x00F49895+1808533]\nE       \tOrdinal0 [0x00F526C1+1844929]\nE       \tBaseThreadInitThunk [0x7753FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77687A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77687A6E+238]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "security", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".HJOYVi11\"}\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00FA5FD3+2187219]\n\tOrdinal0 [0x00F3E6D1+1763025]\n\tOrdinal0 [0x00E53E78+802424]\n\tOrdinal0 [0x00E81C10+990224]\n\tOrdinal0 [0x00E81EAB+990891]\n\tOrdinal0 [0x00EAEC92+1174674]\n\tOrdinal0 [0x00E9CBD4+1100756]\n\tOrdinal0 [0x00EACFC2+1167298]\n\tOrdinal0 [0x00E9C9A6+1100198]\n\tOrdinal0 [0x00E76F80+946048]\n\tOrdinal0 [0x00E77E76+949878]\n\tGetHandleVerifier [0x012490C2+2721218]\n\tGetHandleVerifier [0x0123AAF0+2662384]\n\tGetHandleVerifier [0x0103137A+526458]\n\tGetHandleVerifier [0x01030416+522518]\n\tOrdinal0 [0x00F44EAB+1789611]\n\tOrdinal0 [0x00F497A8+1808296]\n\tOrdinal0 [0x00F49895+1808533]\n\tOrdinal0 [0x00F526C1+1844929]\n\tBaseThreadInitThunk [0x7753FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77687A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77687A6E+238]\n\n", "trace": "  File \"d:\\autoproj\\googleaccount\\.venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\autoproj\\googleaccount\\pages\\SecurityPage.py\", line 34, in work\n    self.find_element(*self.locator_dictionary['tabSecurityPage']).click()\n  File \"D:\\autoproj\\googleaccount\\pages\\SecurityPage.py\", line 21, in find_element\n    return self.browser.find_element(*loc)\n  File \"d:\\autoproj\\googleaccount\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 857, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"d:\\autoproj\\googleaccount\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 435, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\autoproj\\googleaccount\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1658733121254, "stop": 1658733121284}], "attachments": [{"name": "Current URL", "source": "f07de9c7-d91b-4d6a-b5e1-9a630800d75c-attachment.uri", "type": "text/uri-list"}, {"name": "Screenshot", "source": "dbeb401c-7d5e-4f89-9956-f0bf4f48c4c9-attachment.png", "type": "image/png"}], "start": 1658733121254, "stop": 1658733121291, "uuid": "befa54a4-d996-4e78-9e8c-eb71bd1f3d06", "historyId": "08224568775e3edf061a181db785d367", "testCaseId": "1ae16c454f236a940160eb89c8841d1c", "fullName": "tests.login_test.TestSecurity#test_security", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('start_session')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestSecurity"}, {"name": "host", "value": "DESKTOP-12H3A8H"}, {"name": "thread", "value": "2576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.login_test"}]}